// <auto-generated />
using ECommerce.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerce.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200502155107_modification_account")]
    partial class modification_account
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ECommerce.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("tb_m_account");
                });

            modelBuilder.Entity("ECommerce.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("tb_m_category");
                });

            modelBuilder.Entity("ECommerce.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Category_Id");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<string>("Supplier_Id");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id");

                    b.HasIndex("Supplier_Id");

                    b.ToTable("tb_m_item");
                });

            modelBuilder.Entity("ECommerce.Models.ItemDetail", b =>
                {
                    b.Property<int>("Serial")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Item_Id");

                    b.HasKey("Serial");

                    b.HasIndex("Item_Id");

                    b.ToTable("tb_m_item_detail");
                });

            modelBuilder.Entity("ECommerce.Models.ItemPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Item_Id");

                    b.Property<string>("Photo");

                    b.HasKey("Id");

                    b.HasIndex("Item_Id");

                    b.ToTable("tb_m_item_photo");
                });

            modelBuilder.Entity("ECommerce.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("tb_m_notification");
                });

            modelBuilder.Entity("ECommerce.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("tb_m_role");
                });

            modelBuilder.Entity("ECommerce.Models.Supplier", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("tb_m_supplier");
                });

            modelBuilder.Entity("ECommerce.Models.User", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Address1");

                    b.Property<string>("Address2");

                    b.Property<string>("Email");

                    b.Property<string>("First_Name");

                    b.Property<string>("Last_Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("tb_m_user");
                });

            modelBuilder.Entity("ECommerce.Models.Item", b =>
                {
                    b.HasOne("ECommerce.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ECommerce.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("Supplier_Id");
                });

            modelBuilder.Entity("ECommerce.Models.ItemDetail", b =>
                {
                    b.HasOne("ECommerce.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("Item_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ECommerce.Models.ItemPhoto", b =>
                {
                    b.HasOne("ECommerce.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("Item_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ECommerce.Models.User", b =>
                {
                    b.HasOne("ECommerce.Models.Account", "Account")
                        .WithOne("User")
                        .HasForeignKey("ECommerce.Models.User", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
